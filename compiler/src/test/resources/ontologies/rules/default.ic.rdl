#
# this file defines integrity constraint -- rules that derive the bottom type
# (owl:Nothing) if certain well-defined conditions are not met
#
# @author Hans-Ulrich Krieger
# @version Tue Jan 10 16:21:54 CET 2012
#


$disjointWithTypeType
?s <owl:disjointWith> ?t
?i <rdf:type> ?s
?i <rdf:type> ?t
->
?i <rdf:type> <owl:Nothing>


$sameAsDifferentFrom
?s <owl:sameAs> ?o
?s <owl:differentFrom> ?o
->
?s <rdf:type> <owl:Nothing>
?o <rdf:type> <owl:Nothing>


$owl_FunctPropDatatype
?p <rdf:type> <owl:FunctionalProperty>
?p <rdf:type> <owl:DatatypeProperty>
?x ?p ?y
?x ?p ?z
->
?x <rdf:type> <owl:Nothing>
@test
?y != ?z
?p != <rdf:type>


# to address the open-world nature of OWL, it would be better to use
# IsNotSubtypeOf -- but this require the introduction of a potentially
# large number of disjointWith statements
$domainRestrictionViolated
?p <rdfs:domain> ?d
?s ?p ?o
?s <rdf:type> ?t
->
?s <rdf:type> <owl:Nothing>
@test
NoSubClassOf ?t ?d


# to address the open-world nature of OWL, it would be better to use
# IsNotSubtypeOf -- but this require the introduction of a potentially
# large number of disjointWith statements
$rangeRestrictionViolated
?p <rdfs:range> ?r
?s ?p ?o
?o <rdf:type> ?t
->
?o <rdf:type> <owl:Nothing>
@test
NoSubClassOf ?t ?r

